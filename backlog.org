#+TITLE: Backlog for *xoutil* - a collection of disparate utilities
#+AUTHOR: Merchise Autrement [~º/~]
#+DESCRIPTION: Development planning for this package.

* Backlog for *xoutil*

# Gitlab closes issues if ~Fixes #8.~ appears in the correspondent commit.


** Release version 1.8 <2017-10-21 sáb> [3/8]

- [ ] Prepare the [[file:docs/sources/history/_changes-1.8.0.rst][change log for 1.8.0]].

- [X] Fix 'future' documentation errors because 'automodule' use. [8/8]

  - [X] datetime

    [[file:docs/source/xoutil/future/datetime.rst][documentation]] --> [[file:xoutil/future/datetime.py][module]].

  - [X] functools

    [[file:docs/source/xoutil/future/functools.rst][documentation]] --> [[file:xoutil/future/functools.py][module]].

  - [X] inspect

    [[file:docs/source/xoutil/future/inspect.rst][documentation]] --> [[file:xoutil/future/inspect.py][module]].

  - [X] json

    [[file:docs/source/xoutil/future/json.rst][documentation]] --> [[file:xoutil/future/json.py][module]].

  - [X] string

    [[file:docs/source/xoutil/future/string.rst][documentation]] --> [[file:xoutil/future/string.py][module]].

  - [X] textwrap

    [[file:docs/source/xoutil/future/textwrap.rst][documentation]] --> [[file:xoutil/future/textwrap.py][module]].

  - [X] threading

    [[file:docs/source/xoutil/future/threading.rst][documentation]] --> [[file:xoutil/future/threading.py][module]].

  - [X] types

    [[file:docs/source/xoutil/future/types.rst][documentation]] --> [[file:xoutil/future/types.py][module]].

- [-] Create documentations for 'eight' modules [5/7]

  - [X] abc.rst

  - [X] io.rst

  - [X] meta.rst

  - [X] mixins.rst

  - [X] queue.rst

  - [ ] string.rst

  - [ ] text.rst

- [-] Manage deprecation warnings (code and documentation) for: [0/3]

  - [-] 'xoutil.future.string' must be fully deprecated. [0/3]

    See [[file:xoutil/future/string.py][module]].

    - [-] Some useful tools in there that must be migrated [1/2]

      - [X] [[file:xoutil/future/codecs.py][xoutil.future.codecs]]  [3/3]

        - [X] force_encoding

        - [X] safe_decode

        - [X] safe_encode

      - [ ] [[file:xoutil/eight][xoutil.eight]] [0/2]

        - [ ] xoutil.eight.string [0/0]

        - [ ] xoutil.eight.text [0/0]

    - [ ] Document and fix all "normalize_..." functions.

      There are several things that would probably dissapear: We can't be sure
      how do i18n [[file:xoutil/future/string.py::def%20normalize_unicode(value)][normalize_unicode]].

    - [ ] Deprecate functions with the mark "TODO: Deprecate".

  - [ ] '[[file:xoutil/cl/__init__.py::import%20warnings][xoutil.cl]]', replace it by '[[file:xoutil/fp][xoutil.fp]]' sub-modules.

    It is used in Odoo's 'jobs.py' and 'xamatl'; also in 'xoutil' itself.  In
    the branch 'merchise-develop-10.0' of Odoo there is a commit (8149227d4f1:
    "Remove the need of 'xoutil.cl' here.") with a proposal to remove
    completely the need of 'xoutil.cl'.

    'xamatl' will be migrated together with 'xoutil'.

  - [ ] '[[file:xoutil/html/__init__.py::import%20warnings][xoutil.html]]', also see '[[file:docs/source/xoutil/html.rst:::deprecated:][documentation file]]'.

    - [ ] Review when and how to remove symbolic linking to 'xoutil.future'.

      - [[file:xoutil][main package]]

      - [[file:xoutil/eight][xoutil.eight]]

- [X] Remove file:xoutil/fp/monads if it is not going to be part of this
  release.  See file:xoutil/fp/monads/discussion.org

- [X] There is a function named 'type_name' in two different modules:

  - [[file:xoutil/future/inspect.py::def%20safe_name(obj,%20affirm%3DFalse):][xoutil.future.inspect]]

  - [[file:xoutil/eight/__init__.py::def%20type_name(obj):][xoutil.eight]]

  Note: <2017-09-29> The function for the first module was renamed to
  'safe_name' keeping the old name, but deprecated .

  - [X] Document the argument `affirm` in xoutil.future.inspect.type_name.

- [ ] Review [[file:xoutil/keywords.py][xoutil.keywords]], there is a standard module named ~keyword~ and
  must be analyzed if create a new one in ~future~, or integrate it with
  [[file:xoutil/eight/string.py][xoutil.eight.string]].

- [ ] Review [[file:xoutil/names.py][xoutil.names]], analyze it to deprecate most parts and integrate
  all useful with [[file:xoutil/eight/string.py][xoutil.eight.string]].


** Issues

- [ ] =xoutil.cli= fails in Python 3.4+

  See in [[https://gitlab.lahavane.com/merchise/xoutil/issues/10][gitlab]].


** Development ideas. [/]

- [ ] Refactor CLI.

  See IPython's [[file:~/.local/lib/python2.7/site-packages/IPython/terminal/ipapp.py::addflag%20%3D%20lambda%20*args:%20frontend_flags.update(boolean_flag(*args))][addflag]].  Migrate the logic for sub-commands in 'argparse' by
  using [[file:/usr/share/doc/python/html/library/argparse.html?highlight%3Dargumentparser#argparse.ArgumentParser.add_subparsers][add_subparsers]] when definie method [[file:xoutil/cli/__init__.py::def%20get_arg_parser(cls):][get_arg_parser]] for sub-classes of
  [[file:xoutil/cli/__init__.py::class%20Command(ABC):][xoutil.cli.Command]].


** Miscellaneous. [/]

- [ ] Improve naming. [/]

  - [ ] A time ago, manu was arguing about the convenience of a package named
    'xoutil.future', mainly having 'xoutil.eight'.

    Anyway, I (med) think that is convenient two have two separate modules,
    but reviewing 'future' name; some ideas:

    - 'enhancement': improvement that makes something more agreeable

    - 'improvement': change for the better; progress in development

- [ ] Add Python 3 'partialmethod' into 'xoutil.future.functools' (or maybe
  into 'xoutil.eight').

- [ ] Review and fix 'xoutil.decorator' module.  Get ideas from
  [[https://github.com/dbrattli/OSlash/blob/master/oslash/util/extensionmethod.py][extensionmethod]] from OSlash in order to improve our module.

- [ ] Review [[https://github.com/dbrattli/OSlash/blob/master/oslash/util/fn.py][fn]] from OSlash, generalize and integrate our 'compose' versions
  in 'xoutil.future.functools' and 'xoutil.cl' using their ideas.

- Implement Python 3 'functools.singledispatch' in our
  'xoutil.future.functools'. Ask @manu for an equivalent tool he programmed.
  Use a similar mechanism also in 'xoutil.fp' for pattern matching.

- [ ] Improve special characters in a wild-carded name.  Python
  'fnmatch.translate' standard function lacks of functionality present in
  most shells (like alternation of comma-separated alternatives); thus,
  ``foo{bar,lish}`` would be matched in 'foobar' or 'foolish'.


** Develop Monad concept into 'xoutil'. [/]

There are several "old" modules that could be migrated (or integrated) into
new monads modules; these old modules could become clients of monads.

- [ ] 'xoutil.connote': intends for to have predicates (commonly understood
  to be Boolean-valued functions).

- [ ] 'xoutil.symbols': to be instance of and sub-class checks in
  'MetaSymbol' class must be extended to be compliant with monads.

- [ ] 'xoutil.cl': reproducing some concepts of "Common Lisp" in Python.
  Value checkers are the best candidates to be monadic.

- [ ] 'xoutil.values': this module is deprecated but must be analyzed
  during this proccess.


** Errors

- [ ] Fix IPython "recursive reload" in all xoutil modules for all Python
  versions.

  The =IPython.lib.deepreload= module allows you to recursively reload a
  module: changes made to any of its dependencies will be reloaded without
  having to exit.

  When it is run on =xoutil=:

  #+begin_src python
    from IPython.lib.deepreload import reload as dreload
    import xoutil
    dreload(xoutil)
  #+end_src
