#+TITLE: Backlog for *xoutil* - a collection of disparate utilities
#+AUTHOR: Merchise Autrement [~ยบ/~]
#+DESCRIPTION: Development planning for this package.

This file only describe tasks, issues, and ideas strictly related to
development processes.  All backlog items that must be part of this package
documentation could be found in the [[file:docs/source/backlog][backlog]] directory.


* General Ideas. [/]

- [ ] 'xoutil.reprlib' must be implemented as part of 'xoutil.eight'.

  Python 3 library 'reprlib' is 'repr' in Python 2.

- [ ] Rename "encoding" by "coding" in all =# -*- encoding:= headers.

- [ ] Review 'xoutil.cli'.

  See IPython's [[file:~/.local/lib/python2.7/site-packages/IPython/terminal/ipapp.py::addflag%20%3D%20lambda%20*args:%20frontend_flags.update(boolean_flag(*args))][addflag]].  Migrate the logic for sub-commands in 'argparse' by
  using [[file:/usr/share/doc/python/html/library/argparse.html][add_subparsers]] when define method [[file:xoutil/cli/__init__.py::def%20get_arg_parser(cls):][get_arg_parser]] for sub-classes of
  [[file:xoutil/cli/__init__.py::class%20Command(ABC):][xoutil.cli.Command]].

- [ ] Integrate in only one module 'xoutil.validators' and 'xoutil.values'.

- [ ] 'xoutil.fp' must assume all functionalities related to most pure
  functional programming.

- [ ] Review 'xoutil.params'.

  Optimize current features; and create a decorator as a pre-condition for
  parameter validation:

  #+begin_src python
    import sys
    from xoutil.eight import string_types
    from xoutil.values import file_coerce as is_file
    from xoutil.values import positive_int_coerce as positive_int
    from xoutil.params import require_params, ParamSchemeRow as row

    @require_params(
        row('stream', 0, -1, 'output', default=sys.stdout, coerce=is_file),
        row('indent', 0, 1, default=1, coerce=positive_int),
        row('width', 0, 1, 2, 'max_width', default=79, coerce=positive_int),
        row('newline', default='\n', coerce=string_types))
    def def test(*args, **kwargs):
        ...
  #+end_src

- [ ] Review redundances in several modules (e.g. 'string', 'names',
  'keywords', 'reprlib', 'clipping', 'future.textwrap', 'future.codecs',
  'eight.string', 'eight.text', ...)

- [ ] Review [[file:xoutil/tools.py][xoutil.tools]] in order to find incoherent definictions with newly
  modules.

- [ ] Review that in 'xoutil.eight' there are several symbols to check Python
  versions (_pyver, _py2, _py3, _py33, _py34, _pypy).  Deprecate all in favor
  of 'python_version'

- [ ] Add Python 3 'partialmethod' into 'xoutil.future.functools'.

- [ ] Implement Python 3 'functools.singledispatch' in our
  'xoutil.future.functools'.  Ask @manu for an equivalent tool he programmed.
  Use a similar mechanism also in 'xoutil.fp' for pattern matching.

- [ ] Review and fix 'xoutil.decorator' module.  Get ideas from
  [[https://github.com/dbrattli/OSlash/blob/master/oslash/util/extensionmethod.py][extensionmethod]] from OSlash in order to improve it.

- [ ] Review [[https://github.com/dbrattli/OSlash/blob/master/oslash/util/fn.py][fn]] from OSlash, generalize and integrate our 'compose'.

- [ ] Improve special characters in a wild-carded name.  Python
  'fnmatch.translate' standard function lacks of functionality present in
  most shells (like alternation of comma-separated alternatives); thus,
  ``foo{bar,lish}`` would be matched in 'foobar' or 'foolish'.

- [ ] Use =DeprecationWarning= instead =UserWarning= in module
  [[file:xoutil/deprecation.py][xoutil.deprecation]] (see =warnings.simplefilter('default',
  DeprecationWarning)=).


* Errors

- [ ] =IPython.lib.deepreload.reload= doesn't work with =xoutil= in Python 3:

  #+begin_src python
    from IPython.lib.deepreload import reload as dreload
    import xoutil
    dreload(xoutil)
  #+end_sr
