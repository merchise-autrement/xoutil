---
variables:
  PROJECT_NAME: xoutil

stages:
  - test
  - check
  - build
  - publish
  - tweet
  - clean

lint:
  stage: test
  script:
    - merchise_lint
  tags:
    - merchise-lint

run all tests (if needed):
  stage: test
  script:
    - git show --oneline --name-only $CI_COMMIT_SHA | grep \.py$ && tox -e2.7-unit,3.5-unit,2.7-greenlets || echo "Skip running test... no Python file touched in $CI_COMMIT_REF_NAME ($CI_COMMIT_SHA)"
  tags:
    - python
    - virtualenv
    - tox
  only:
    - branches

check signature of tag:
  stage: check
  script:
    - git verify-tag $CI_COMMIT_REF_NAME
  tags:
    - git
    - gpg
  only:
    - tags

build source distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py sdist
  tags:
    - python
  artifacts:
    expire_in: 4 hours
    paths:
      - dist/
  only:
    - tags

build binary distribution:
  stage: build
  script:
    - rm -f dist/*
    - python setup.py bdist_wheel
  tags:
    - wheel
  artifacts:
    expire_in: 4 hours
    paths:
      - dist/
  only:
    - tags

publish_locally:
  variables:
    GIT_STRATEGY: none
  stage: publish
  script:
    - ssh manu@gestion.lahavane.com "mkdir -p Repos/$PROJECT_NAME"
    - scp dist/* manu@gestion.lahavane.com:Repos/$PROJECT_NAME/
  tags:
    - repo.lahavane.com
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: repo.lahavane.com
    url: http://repo.lahavane.com/pypi/$PROJECT_NAME


publish in pypi:
  variables:
    GIT_STRATEGY: none
  stage: publish
  script:
    - twine upload dist/*
  tags:
    - twine
  only:
    - tags
  dependencies:
    - check signature of tag
    - build source distribution
    - build binary distribution
  environment:
    name: pypi
    url: https://pypi.python.org/pypi/$PROJECT_NAME

brag about new release in twitter:
  variables:
    GIT_STRATEGY: none
  stage: tweet
  script:
    - twitter set "New version $CI_COMMIT_REF_NAME of xoutil -- https://pypi.python.org/pypi/xoutil"
  tags:
    - twitter
  only:
    - tags
  dependencies:
    - publish in pypi

build documentation:
  stage: build
  script:
    - mkdir -p envs
    - virtualenv envs/$CI_COMMIT_SHA
    - source envs/$CI_COMMIT_SHA/bin/activate
    - pip install sphinx sphinx-rtd-theme
    - pip install -e .
    - make -C docs/ html
    - cd docs/build/html
    - tar -cf ../../../$CI_PROJECT_NAME-$CI_COMMIT_SHA.tar ./
  artifacts:
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar
    expire_in: 4 hours
  tags:
    - virtualenv
  only:
    - tags
    - branches

publish in our rtd:
  stage: publish
  script:
    - scp $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar rtd@docs.lahavane.com:.
    - ssh rtd@docs.lahavane.com mkdir -p $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com tar -xf $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar -C $CI_PROJECT_NAME/.$CI_COMMIT_SHA
    - ssh rtd@docs.lahavane.com "rm -r /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME; ln -s /var/www/html/$CI_PROJECT_NAME/.$CI_COMMIT_SHA /var/www/html/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME"
    - ssh rtd@docs.lahavane.com rm $CI_PROJECT_NAME-$CI_COMMIT_SHA.tar
  tags:
    - rtd@docs.lahavane.com
  dependencies:
    - build documentation
  only:
    - tags
    - branches

clean_build:
  variables:
    GIT_STRATEGY: none
  stage: clean
  script:
    - rm -f dist/*
  tags:
    - python
  when: always
  allow_failure: true
  dependencies:
    - build source distribution
    - build binary distribution
